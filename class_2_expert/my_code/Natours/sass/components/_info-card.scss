
.info-card {
  background: #1cf1cf;
  color: black;
  width: 35rem;
  padding: 1rem;
  text-align: center;
  margin: 0 auto;
  //clip-path: circle(10% at 92% 20%);
  transition: all .3s ease-in-out;
  //box-shadow: inset 0 0 0 2px white;
  position: relative;
  vertical-align: middle;

  & span {
    position: relative;
    color: white;
    font-weight: bold;
    float: right;
    transition: color .5s ease-in-out;
    margin-top: 2px;
    margin-right: 1.5rem;
    font-size: 3rem;
  }


  &:hover {
    clip-path: circle(75%);
    background: #3ae4ff;
  }

  &:hover span {
    color: transparent;
  }

}


/**
  code for animated slow drawing of border using ::after and ::before
 */

// basic setup of the drawing
.draw-setup {

  // insert an empty before and after element in the block using this class
  &::before,
  &::after {
    content: '';
    position: absolute;
    border: 4px solid transparent; // stating with transparent border
    width: 0;
    height: 0;
  }

  // expand the width of the after and before shapes to 100% on hover
  &:hover::before,
  &:hover::after {
    width: 100%;
    height: 100%;
  }
}

// rectangular drawing from top -> right down ->bottom -> left up
.draw-rect {

  // this is the position where css starts drawing the element also the initial position of the element in containing block
  // therefore when  we animate the width and height from 0 -> 100% the drawing will start from bottom right
  // for the after elem and from the top left for :before elm

  // This covers the top & right borders (expands right, then down)
  &::before {
    top: 0;
    left: 0;
  }

  // And this covers the bottom & left borders (expands left, then up)
  &::after {
    bottom: 0;
    right: 0;

  }

  // before animation timing
  &:hover::before {
    border-top-color: white;
    border-right-color: white;

    transition: width 1s ease-out, // Width expands first
    height 1s ease-out 1s; // And then height
  ;
  }

  // after animation timing
  &:hover::after {
    border-bottom-color: black;
    border-left-color: black;

    transition: border-color 0s ease-out 2s, // Wait 2s for ::before to finish before showing border (color glitch)
    width 1s ease-out 2s, // And then expanding width
    height 1s ease-out 3s; // And finally height
  ;
  }

}


// drawing start at the top left corner and it ends at the right bottom corner
.draw-meet {
  // here the before and after start at the same position, top left corner of the containing block
  &::before,
  &::after {
    top: 0;
    left: 0;
  }

  // before animation timing
  &:hover::before {
    // show only top and right borders of the before element
    border-top-color: white;
    border-right-color: white;

    transition: width 1s ease-out, // Width expands first
    height 1s ease-out 1s; // And then height with 1s delay
  ;
  }

  // after animation timing
  &:hover::after {

    // show only left and bottom borders of the after element
    border-bottom-color: black;
    border-left-color: black;
    // height expands first of the ::after element since the element start at the top therefore we need
    // the height to 100% then width 100% to see the bottom border
    transition: height 1s ease-out, width 1s ease-out 1s;
  }
}

.draw-center {


  // the before will cover the left and right borders drawing
  &::before {
    top: 50%; // start the element the pushed 50% from the top
    left: 0;
  }

  // the after will cover the top and bottom borders drawing
  &::after {
    left: 50%; // start the element  pushed 50% from the left
    top: 0;
  }

  &:hover::before {
    //show left and right border colors
    border-left-color: black;
    border-right-color: black;

    // push the element back to top edge when hovering
    // animating this will show the border expanding from the center in both direction top and bottom
    // that means moving to the top edge at the same time as increasing the height to 100%
    // delly the top transition by .5s to see it clearly
    top: 0;
    // animate height and the top position transitions
    transition: height .5s, top .5s;
  }

  // same logic applies for top and bottom borders except the  is moving horizontally
  &:hover::after {
    border-top-color: black;
    border-bottom-color: black;
    left: 0;

    transition: width .5s, left .5s;
  }

}

.draw-underline {

  &::before {
    left: 50%;
    bottom: 0;
    transition: width .5s, border-bottom-color .5s, left .5s;
  }

  &:hover::before {
    border-bottom-color: black;
    left: 0;
  }

}

/**
 this is a none-border single line drawing method, using a single ::before element
 */

.draw-setup-2 {
  position: relative;

  // basic ::before setup
  &::before {
    content: '';
    position: absolute;
    height: 3px;
    width: 0; // width is set to 0 initially
    background: black;

    /**
  placing the transition  prop on the ::before will include transitions when hovering and when the mouse leaves ::before
  For example the width prop goose from 0 to 100% state on hover and from 100% to 0% state on mouseleave

 */
    // animate  all properties
    transition: all .5s;
  }


  // line start expanding form the center in both left and right directions
  &__cent-ul {

    &::before {
      left: 50%; // element is pushed 50% from the left initially
      bottom: 0; // element starts from bottom this will allow a bottom underline
    }

    &:hover::before {
      width: 100%; // expand the width to show the line which now has 3px height and 100% width
      left: 0; // push back the element to the left corner(this will give the effect of a line expending from the center)
    }

  }

  // left to right
  &__bottom-l-to-r {

    &::before {
      left: 0;
      bottom: 0; // element starts from left bottom this will allow a  left to right bottom underline
    }

    &:hover::before {
      width: 100%; // expand the width to show the element which now has 3px height and 100% width
    }

  }

  // bottom right to left
  &__btm-r-to-l {

    &::before {
      right: 0;
      bottom: 0; // element starts from left bottom this will allow a  left to right bottom underline
    }

    &:hover::before {
      width: 100%; // expand the width to show the element which now has 3px height and 100% width
    }

  }

  // bottom left -> right -> right
  &__btm-l-r-r {

    &::before {
      // moving to the right corner when the mouse leaves ::before which give the effect
      // of the line decreasing width towards the right corner
      right: 0;
      bottom: 0;
    }

    &:hover::before {

      width: 100%;
      //start from the left corner on hover and increase the width towards the right
      left: 0;
    }

  }

  // top -> bottom -> top
  &__top-bt {

    // hide overflow of the ::before caused by moving -3px to the top
    overflow: hidden;

    &::before {
      width: 100%; // width is set 100% initially
      left: 0;
      top: -3px; // move out of the containing block starting at the top
    }


    &:hover::before {
      top: calc(100% - 3px); // move from top to bottom by setting top distance
    }

  }

  &__fill {
    // The containing block which using this class must have a z-index
    // this is important because it defies the stacking context where lives ::before on the z axis
    // setting z-index -1 on ::before and parent to 1 will not push the elm behind the parent
    // although the content in the parent will will be on top of the before element which will result in background
    // being bellow the content that doesn't have a defined background like for example a <p> will show its text
    // on top of ::before
    z-index: 1;

    &::before {
      left: 0;
      top: 0;
      height: 100%;
      z-index: -1;
    }

    &:hover::before {
      width: 100%;
    }

  }


}

















